<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>parent = noone;

trailing = ""

value = 127;
value = 0;

gaugeLeft = x + 80;
gaugeRight = x + 180;
sectionBorder = 300;

dragging = false;
maxValue = 255;

// the widget to refresh the value directly 
//by clicking mouse left button and inputing a new method
getIntegerValue = instance_create(x,y - 24,objOutlinedButton);
getIntegerValue.parent = id;
getIntegerValue.needPopup = true;
getIntegerValue.popupType = "integer";
getIntegerValue.value = value;
getIntegerValue.windowTitle = "please input the new value of " + trailing;
getIntegerValue.width = 40;
getIntegerValue.height = 24;

//show_message(string(getIntegerValue.x) + " " + string(getIntegerValue.y))

isset = false;

scrCheckSingleton();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while(parent != noone){
    if (!isset){
        getIntegerValue.parent = id;
        getIntegerValue.value = value;
        isset = true;
    }
    exit;
}
exit;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var varLeft,varRight,showLeft,showRight,tempX;
varLeft = x + gaugeLeft;
varRight = x + gaugeRight;

dragging = false;
tempX = varLeft + (value / maxValue) * (varRight - varLeft)

showLeft = x + gaugeRight;
showRight = x + sectionBorder;


draw_text(x,y,trailing);

draw_rectangle_color(x + gaugeLeft, y + 6, x + gaugeRight,y + 10,c_gray,c_gray,c_gray,c_gray,0)
draw_rectangle_color(x + gaugeLeft, y + 6, x + gaugeRight,y + 10,c_black,c_black,c_black,c_black,1)


if (scrCursorWithin(x + gaugeLeft - 20, y, x + gaugeRight + 20,y + 24)){
    if(mouse_check_button(mb_left)){
        dragging = true;
    }
}

if(dragging and !mouse_check_button_released(mb_left)){
    room_caption = "dragging"
    var dragX;
    dragX = min(max(mouse_x - varLeft,0),(varRight - varLeft))
    //value = floor(255 * (mouse_x - varLeft)/(varRight - varLeft));
    value = round(maxValue * (dragX)/(varRight - varLeft));
    getIntegerValue.value = value;
}

if mouse_check_button_released(mb_left) {
    dragging = false;
    room_caption = "Sprite Editor"
}

getIntegerValue.x = showLeft + 20;
getIntegerValue.y = y;
getIntegerValue.windowTitle = "please input the new value of " + trailing;

if (getIntegerValue.cursorWithin){
    if(getIntegerValue.refresh){
       value = max(0,min(getIntegerValue.value,255));
       getIntegerValue.refresh = false;
       getIntegerValue.value = value;
    }
}


tempX = varLeft + (value / maxValue) * (gaugeRight - gaugeLeft)

draw_sprite(sprGaugePointer,0,tempX,y + 8)
scrResetFormat()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
